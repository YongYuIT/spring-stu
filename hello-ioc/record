1、什么是IoC
IoC是一种通过描述来生成或者获取对象的技术。在常规的java中，生成对象通常使用new关键字，而spring则是通过描述来生成对象的。
Spring把每一个需要管理的对象称为Spring bean，管理这些Bean的容器被称为Spring IoC容器。

2、IoC容器需实现如下两个基本功能：
通过描述来管理Bean，包括发布和获取
通过描述完成Bean之间的依赖关系

Spring里的描述方式包括注解、java描述文件（@Configuration）、XML三种方式。Spring Boot一般采用注解的方式。

3、所有Spring IoC容器必须实现org.springframework.beans.factory.BeanFactor接口，它是一切Spring IoC容器的根接口
这个根容器接口里面最重要的方法就是getBean
由于这个根容器接口太抽象，不太好用。所以Spring提供了一个更加高级的容器接口ApplicationContext
ApplicationContext是Spring里面最常用最重要的容器接口，大部分Spring IoC容器是ApplicationContext的实现类。
AnnotationConfigApplicationContext是一个典型的基于注解的IoC容器。Spring Boot里面的IoC容器也都是基于注解的

4、关于@Configuration
@Configuration代表这是一个供IoC容器使用的配置文件。这个配置文件向IoC容器描述了如何装配相应的bean
@Bean描述了创建方法与bean类型的对应关系

5、通过扫描装配Bean
虽然Spring支持使用java描述文件（@Configuration）和XML方式向IoC容器提供描述，但是Spring boot通常采用注解的方式向IoC容器提供描述
在注解的描述方式下，我们可以使用@Bean注解将一个个bean注入到IoC容器中，但是这种方式比较麻烦。Spring允许使用扫描的方式注入。
通过扫描的方式注入bean需要使用@Component和@ComponentScan注解

6、@Component、@Value、@ComponentScan
@Component表明这个类需要被注入容器
@Value为注入容器的对象赋初值
@ComponentScan用于指定IoC容器扫描范围，即只扫描@ComponentScan标注的类当前所在包及其子包，如

ApplicationContext context=new AnnotationConfigApplicationContext(AppConfig.class);
context是一个IoC容器，他使用的配置文件是AppConfig类，所以AppConfig类必须标注@Configuration
而同时AppConfig类标注@ComponentScan，意味着context将会扫描AppConfig当前包及其子包，把所有标注@Component的类的对象注入容器

@ComponentScan默认的扫描范围是标注的类当前所在包及其子包，但是也可以在其上实现复杂的自定义扫描逻辑，这里就不再展开
很显然，由于@ComponentScan要配合@Component使用，对于那些没有标注@Component的外部java资源（实际上也无法标注）如何注入呢？还是使用@Bean！（例见com.thinking.hello.mixed_003.Client的注入）

7、关于@Autowired
在IoC容器扫描范围内的@Autowired变量（可以是属性也可以是方法形参），IoC容器将会按照type匹配的规则为其赋值。
如果类型匹配出现了多匹配的现象（歧义），可通过特殊化变量命名、@Primmary定义匹配优先级、@Qualifier指定匹配规则的方式消除。

8、关于被注入到IoC容器的bean，其生命周期见com.thinking.hello.lifecycle_005测试结果。这里需要注意两点
  a、可以通过@PostConstruct和@PreDestroy插入bean的自定义创建和销毁动作
  b、在IoC容器配置文件里（即@Configuration文件）可以通过对@ComponentScan lazyInit的设置来控制是否立即创建Bean。默认是false，即扫描到bean的信息之后立即创建bean。